{"version":3,"sources":["webpack:///./src/js/utils/detector.js","webpack:///./src/js/utils/preloadScene.js","webpack:///./src/js/sound/SoundProducer.js","webpack:///./src/js/sound/SpeechManager.js","webpack:///./src/js/main/components/renderer.js","webpack:///./src/js/main/components/camera.js","webpack:///./src/js/main/components/controls.js","webpack:///./src/js/main/components/SkyBox.js","webpack:///./src/js/main/managers/InputManager.js","webpack:///./src/js/main/generators/RoomGenerator.js","webpack:///./src/js/main/managers/TextureManager.js","webpack:///./src/js/main/generators/FlatGenerator.js","webpack:///./src/js/main/managers/AvatarManager.js","webpack:///./src/js/main/managers/SceneLoaderManager.js","webpack:///./src/js/main/Main.js","webpack:///./src/js/app.js"],"names":["Detector","canvas","document","createElement","window","WebGLRenderingContext","getContext","e","element","id","style","fontFamily","fontSize","fontWeight","textAlign","background","color","padding","width","margin","innerHTML","join","parameters","parent","undefined","body","this","getWebGLErrorMessage","appendChild","PreloadScene","_loading","getElementById","_saveStyle","_progress","_old_style","display","percent","text","console","log","SoundProducer","audioConfig","_audioConfig","_audioInited","_audioManager","AudioManager","settings","audioPath","getFileUri","_getAudioPath","_currentSound","_preloadMusic","setMute","init","_setAudioVolume","_playBackgroundAudio","audioManager","setVolume","createSound","_getAudio","load","audioId","playSound","stop","sound","_playSound","channel","SpeechManager","_soundProducer","_soundButton","_soundState","_setButtonState","addEventListener","state","_swapState","attachEvent","speechId","progressCallback","say","onEnd","firstChild","data","unmute","mute","Renderer","config","scene","container","threeRenderer","THREE","antialias","setClearColor","fog","setPixelRatio","devicePixelRatio","domElement","shadowMap","enabled","type","maxAnisotropy","capabilities","getMaxAnisotropy","updateSize","outputEncoding","xr","VRButton","createButton","setSize","offsetWidth","offsetHeight","camera","render","Camera","renderer","height","threeCamera","fov","near","far","position","set","posX","posY","posZ","lookAt","aspect","updateProjectionMatrix","Controls","threeControls","OrbitControls","target","controls","x","y","z","autoRotate","autoRotateSpeed","rotateSpeed","zoomSpeed","minDistance","maxDistance","minPolarAngle","maxPolarAngle","enableDamping","enableZoom","dampingFactor","keys","LEFT","RIGHT","UP","BOTTOM","SkyBox","_initSky","sky","Sky","scale","setScalar","add","sun","effectController","uniforms","material","value","theta","Math","PI","phi","cos","sin","copy","InputManager","keyMap","Map","addKey","keyCode","name","down","justPressed","setKeyFromKeyCode","pressed","keyName","get","keyState","setKey","Object","values","RoomGenerator","rooms","doors","walls","textureManager","roomMeshes","_calcCenter","room","roomMesh","_generateShape","points","getTexture","userData","roomId","push","door","doorMesh","vertices","texture","vectorArray","vertex","_transform","shape","extrudeSettings","depth","bevelEnabled","geometry","mesh","map","side","receiveShadow","rotateX","planeVertices","_convertToVertices","floorGeometry","Float32Array","setAttribute","bbox","_moveToCenter","_generateWallExtrude","wallShapeVector","Vector2","min","max","wallShape","wall_mesh","translateZ","_convertToVector","rotateY","translateX","cent","roomPoints","roomPoint","earcut","idx","_generatePlane","wall","setFromObject","getCenter","getSize","coord","TextureManager","textures","_loadTextures","loader","wrapS","wrapT","repeat","texture2","alias","FlatGenerator","_loadJSON","url","_sceneImporter","generate","flatObject","boundingBoxes","object","size","translate","translateY","computeBoundingBox","updateMatrixWorld","box1","boundingBox","clone","applyMatrix4","matrixWorld","sceneImporter","generatorInstance","flat","_generateFlat","JSON","parse","replaceAll","xhr","loaded","total","err","error","main_instance","_material","AvatarManager","avatar","forward","_moveSpeed","_turnSpeed","_avatar","_kForward","_walk","castShadow","mixer","_mixer","_fade_duration","_animations","_getAnimations","_startAnimation","_action","_action2","cube","_boundingBox","_speakingState","_speakingNext","_animationNext","_phonemeDuration","speechManager","_speechManager","deltaTime","inputManager","fade_duration","delta_x","up","delta","left","right","distance","translateOnAxis","_stopAnimation","_findBoundingBox","_speakingAnimation","speak","_speakAboutRoom","action","action2","update","animations","pointingAction","clipAction","gestureAction","startWalkAction","endWalkAction","walkAction","idleAction","avatar_animations","jawAction","_makeJaw","setLoop","reset","setEffectiveTimeScale","setEffectiveWeight","fadeIn","play","fadeOut","xAxis","qInitial","qFinal","setFromAxisAngle","quaternionKF","w","Date","now","floor","random","animation","_randomAnimation","array","box2","intersectsBox","SceneLoaderManager","sceneElements","_loaded","_scene","_sceneElements","instance","loadPromiseList","sceneElement","loadPromise","Promise","resolve","reject","_loadSceneElement","status","loadScenePromises","all","then","res","mergedStatus","result","re","assign","scene_url","toLowerCase","endsWith","_loadGLTF","_loadFBX","_loadVRM","_loadBVH","callback","GLTFLoader","processor","_processScene","_searchAnimations","gltf","gltf_scene","avatarManager","isAvatar","faceVector","gltfObject","_fixObject","_resizeObject","manager","animated","skeleton","visible","bones","durations","duration","animatedCycle","_lastAnimationPhase","_animatedCycle","_animatedCyclePos","BVHLoader","skeletonHelper","boneContainer","clip","_setMixer","VRM","from","vrm","meta","progress","config_translate","config_size","FBXLoader","traverse","child","isMesh","model","searchAnimations","children","forEach","clips","mroot","maxAxis","multiplyScalar","Main","_container","_config","minAzimuthAngle","Infinity","maxAzimuthAngle","isDev","createScene","_renderer","_camera","_controls","light","_addDeveloper","_inputManager","_avatarManager","loadCount","length","setSpeechManager","dpr","dt","_lastframe","requestAnimationFrame","bind","currentPhase","phaseDuration","time","_getDuration","delta_time","curr_msecs","speed","_action_figure","_getAnimation","_getAnimationName","BoxLineGeometry","detector","preloadScene","webgl","showLoading","fetch","response","json","main","start","hideLoading","run","addGetWebGLMessage"],"mappings":"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","file":"0.app.js","sourcesContent":["export default class Detector {\r\n    webgl() {\r\n        try {\r\n            var canvas = document.createElement('canvas');\r\n\r\n            return !!(window.WebGLRenderingContext && (canvas.getContext('webgl') || canvas.getContext('experimental-webgl')));\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    getWebGLErrorMessage() {\r\n        var element = document.createElement('div');\r\n        element.id = 'webgl-error-message';\r\n        element.style.fontFamily = 'monospace';\r\n        element.style.fontSize = '13px';\r\n        element.style.fontWeight = 'normal';\r\n        element.style.textAlign = 'center';\r\n        element.style.background = '#fff';\r\n        element.style.color = '#000';\r\n        element.style.padding = '1.5em';\r\n        element.style.width = '400px';\r\n        element.style.margin = '5em auto 0';\r\n\r\n        element.innerHTML = window.WebGLRenderingContext ? [\r\n            'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br />',\r\n            'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\r\n        ].join('\\n') : [\r\n            'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br/>',\r\n            'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\r\n        ].join('\\n');\r\n\r\n        return element;\r\n    };\r\n\r\n    addGetWebGLMessage(parameters) {\r\n        var parent, id, element;\r\n\r\n        parameters = parameters || {};\r\n\r\n        parent = parameters.parent !== undefined ? parameters.parent : document.body;\r\n        id = parameters.id !== undefined ? parameters.id : 'oldie';\r\n\r\n        element = this.getWebGLErrorMessage();\r\n        element.id = id;\r\n\r\n        parent.appendChild(element);\r\n    };\r\n}\r\n","export default class PreloadScene {\r\n  constructor(document) {\r\n    this._loading = document.getElementById('loading');\r\n    this._saveStyle();\r\n    this._progress = document.getElementById( 'progress' );\r\n  }\r\n\r\n  _saveStyle() {\r\n    this._old_style = this._loading.style.display;\r\n  }\r\n\r\n  hideLoading() {\r\n    this._saveStyle();\r\n    this._loading.style.display = \"none\";\r\n  }\r\n\r\n  showLoading() {\r\n    this._loading.style.display = this._old_style;\r\n  }\r\n\r\n  progress(percent, text) {\r\n    console.log(percent, text);\r\n    this._progress.style.width = percent + '%';\r\n  }\r\n\r\n}\r\n","import AudioManager from 'audio-manager';\r\n\r\nexport default class SoundProducer {\r\n\r\n  constructor(audioConfig) {\r\n\r\n    this._audioConfig = audioConfig;\r\n\r\n    this._audioInited = false;\r\n\r\n    const channelIds = ['speech', 'music'];\r\n\r\n    this._audioManager = new AudioManager(channelIds);\r\n    this._audioManager.settings.audioPath = 'assets/audio/';\r\n\r\n    this._audioManager.settings.getFileUri = this._getAudioPath;\r\n\r\n    this._currentSound = undefined;\r\n\r\n    this._preloadMusic(this._audioManager);\r\n\r\n  }\r\n\r\n  _getAudioPath(audioPath, id) {\r\n    return audioPath + id;\r\n  }\r\n\r\n  mute() {\r\n    if (this._audioInited) {\r\n      this._audioManager.setMute();\r\n    }\r\n  }\r\n\r\n  unmute() {\r\n    if (!this._audioInited) {\r\n      this._audioManager.init();\r\n      this._setAudioVolume(this._audioManager);\r\n      this._playBackgroundAudio(this._audioManager);\r\n      this._audioInited = true;\r\n    }\r\n  }\r\n\r\n  _setAudioVolume(audioManager) {\r\n    audioManager.setVolume('speech', 0.4);\r\n    audioManager.setVolume('music', 0.1);\r\n  }\r\n\r\n  _preloadMusic(audioManager) {\r\n    audioManager.createSound(this._getAudio('background')).load();\r\n  }\r\n\r\n  _getAudio(audioId) {\r\n    return this._audioConfig[audioId];\r\n  }\r\n\r\n  _playBackgroundAudio(audioManager) {\r\n    const panoramic = 0.9;\r\n\r\n    audioManager.playSound('music', this._getAudio('background'));\r\n  }\r\n\r\n  say(id) {\r\n\r\n    if(this._currentSound !== undefined){\r\n      this._currentSound.stop();\r\n      this._currentSound = undefined;\r\n    }\r\n\r\n    const sound = this._playSound(this._audioManager, 'speech', id);\r\n\r\n    this._currentSound = sound;\r\n\r\n    return sound;\r\n  }\r\n\r\n  _playSound(audioManager, channel, id) {\r\n    return audioManager.playSound(channel, this._getAudio(id));\r\n  }\r\n}\r\n","import SoundProducer from \"./SoundProducer\"\r\n\r\nexport default class SpeechManager {\r\n\r\n  constructor(document) {\r\n\r\n    const audioConfig = {\r\n      'background': 'bensound-jazzyfrenchy.mp3',\r\n      'hall': 'hall.ogg',\r\n      'kitchen': 'kitchen.ogg',\r\n      'corridor': 'corridor.ogg'\r\n    }\r\n\r\n    this._soundProducer = new SoundProducer(audioConfig);\r\n\r\n    this._soundButton = document.getElementById('soundButton');\r\n    this._soundState = false;\r\n\r\n    this._setButtonState(this._soundState)\r\n\r\n    if (this._soundButton.addEventListener) {\r\n      this._soundButton.addEventListener('click', () => {\r\n        const state = this._swapState();\r\n        this._setButtonState(state);\r\n      })\r\n    } else if (this._soundButton.attachEvent) {\r\n      this._soundButton.attachEvent('onclick', () => {\r\n        const state = this._swapState();\r\n        this._setButtonState(state);\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  say(speechId, progressCallback) {\r\n    const sound = this._soundProducer.say(speechId);\r\n\r\n    progressCallback('speak');\r\n\r\n    sound.onEnd = function () {\r\n      progressCallback('stop');\r\n      console.log('sound playback ended');\r\n      sound.onEnd = null;\r\n    };\r\n\r\n  }\r\n\r\n\r\n  _swapState() {\r\n    this._soundState = !this._soundState;\r\n    return this._soundState;\r\n  }\r\n\r\n  _setButtonState(state) {\r\n    const text = this._soundButton.firstChild;\r\n    if (state) {\r\n      text.data = 'MUTE';\r\n      this._soundProducer.unmute();\r\n\r\n    } else {\r\n      text.data = 'UNMUTE';\r\n      this._soundProducer.mute();\r\n    }\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\n\r\nimport { VRButton } from 'three/examples/jsm/webxr/VRButton';\r\nimport { XRControllerModelFactory  } from 'three/examples/jsm/webxr/XRControllerModelFactory';\r\n\r\n\r\n// Main webGL renderer class\r\nexport default class Renderer {\r\n  constructor(config, scene, container) {\r\n    // Properties\r\n    this.scene = scene;\r\n    this.container = container;\r\n\r\n    // Create WebGL renderer and set its antialias\r\n    this.threeRenderer = new THREE.WebGLRenderer({antialias: true});\r\n\r\n    // Set clear color to fog to enable fog or to hex color for no fog\r\n    this.threeRenderer.setClearColor(scene.fog.color);\r\n    this.threeRenderer.setPixelRatio(window.devicePixelRatio); // For retina\r\n\r\n    // Appends canvas\r\n    container.appendChild(this.threeRenderer.domElement);\r\n\r\n    // Shadow map options\r\n    this.threeRenderer.shadowMap.enabled = true;\r\n    this.threeRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\r\n    // Get anisotropy for textures\r\n    config.maxAnisotropy = this.threeRenderer.capabilities.getMaxAnisotropy();\r\n\r\n    // Initial size update set to canvas container\r\n    this.updateSize();\r\n\r\n    this.threeRenderer.outputEncoding = THREE.sRGBEncoding;\r\n    this.threeRenderer.xr.enabled = true;\r\n\r\n    // VR Button\r\n    document.body.appendChild( VRButton.createButton( this.threeRenderer ) );\r\n\r\n    // Listeners\r\n    document.addEventListener('DOMContentLoaded', () => this.updateSize(), false);\r\n    window.addEventListener('resize', () => this.updateSize(), false);\r\n  }\r\n\r\n  updateSize() {\r\n    this.threeRenderer.setSize(this.container.offsetWidth, this.container.offsetHeight);\r\n  }\r\n\r\n  render(scene, camera) {\r\n    // Renders scene to canvas target\r\n    this.threeRenderer.render(scene, camera);\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\n\r\n// Class that creates and updates the main camera\r\nexport default class Camera {\r\n    constructor(config, renderer) {\r\n        const width = renderer.domElement.width;\r\n        const height = renderer.domElement.height;\r\n\r\n        // Create and position a Perspective Camera\r\n        this.threeCamera = new THREE.PerspectiveCamera(\r\n            config.camera.fov,\r\n            width / height,\r\n            config.camera.near,\r\n            config.camera.far\r\n        );\r\n\r\n        this.threeCamera.position.set(\r\n            config.camera.posX,\r\n            config.camera.posY,\r\n            config.camera.posZ\r\n        );\r\n\r\n        this.threeCamera.lookAt(0,0,0);\r\n\r\n        // Initial sizing\r\n        this.updateSize(renderer);\r\n\r\n        // Listeners\r\n        window.addEventListener('resize', () => this.updateSize(renderer), false);\r\n    }\r\n\r\n    updateSize(renderer) {\r\n        // Update camera aspect ratio with window aspect ratio\r\n        this.threeCamera.aspect = renderer.domElement.width / renderer.domElement.height;\r\n\r\n        // Always call updateProjectionMatrix on camera change\r\n        this.threeCamera.updateProjectionMatrix();\r\n    }\r\n}\r\n","import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\n// Controls based on orbit controls\r\nexport default class Controls {\r\n    constructor(config, camera, container) {\r\n        // Orbit controls first needs to pass in THREE to constructor\r\n        //const orbitControls = new OrbitControls(THREE);\r\n        this.threeControls = new OrbitControls(camera, container);\r\n\r\n        this.init(config);\r\n    }\r\n\r\n    init(config) {\r\n        this.threeControls.target.set(config.controls.target.x, config.controls.target.y, config.controls.target.z);\r\n        this.threeControls.autoRotate = config.controls.autoRotate;\r\n        this.threeControls.autoRotateSpeed = config.controls.autoRotateSpeed;\r\n        this.threeControls.rotateSpeed = config.controls.rotateSpeed;\r\n        this.threeControls.zoomSpeed = config.controls.zoomSpeed;\r\n        this.threeControls.minDistance = config.controls.minDistance;\r\n        this.threeControls.maxDistance = config.controls.maxDistance;\r\n        this.threeControls.minPolarAngle = config.controls.minPolarAngle;\r\n        this.threeControls.maxPolarAngle = config.controls.maxPolarAngle;\r\n        this.threeControls.enableDamping = config.controls.enableDamping;\r\n        this.threeControls.enableZoom = config.controls.enableZoom;\r\n        this.threeControls.dampingFactor = config.controls.dampingFactor;\r\n        this.threeControls.keys = { LEFT: 0, RIGHT: 0, UP: 0, BOTTOM: 0 }\r\n    }\r\n}\r\n","import * as THREE from 'three';\r\n\r\nimport {Sky} from 'three/examples/jsm/objects/Sky.js';\r\n\r\n\r\nexport default class SkyBox {\r\n\r\n\r\n  constructor(scene) {\r\n\r\n    this._initSky(scene);\r\n\r\n  }\r\n\r\n  _initSky(scene) {\r\n\r\n    // Add Sky\r\n    const sky = new Sky();\r\n    sky.scale.setScalar(450000);\r\n    scene.add(sky);\r\n\r\n    const sun = new THREE.Vector3();\r\n\r\n    /// GUI\r\n\r\n    const effectController = {\r\n      turbidity: 10,\r\n      rayleigh: 3,\r\n      mieCoefficient: 0.005,\r\n      mieDirectionalG: 0.7,\r\n      inclination: 0.49, // elevation / inclination\r\n      azimuth: 0.25, // Facing front,\r\n     // exposure: renderer.toneMappingExposure\r\n    };\r\n\r\n    const uniforms = sky.material.uniforms;\r\n    uniforms[\"turbidity\"].value = effectController.turbidity;\r\n    uniforms[\"rayleigh\"].value = effectController.rayleigh;\r\n    uniforms[\"mieCoefficient\"].value = effectController.mieCoefficient;\r\n    uniforms[\"mieDirectionalG\"].value = effectController.mieDirectionalG;\r\n\r\n    const theta = Math.PI * (effectController.inclination - 0.5);\r\n    const phi = 2 * Math.PI * (effectController.azimuth - 0.5);\r\n\r\n    sun.x = Math.cos(phi);\r\n    sun.y = Math.sin(phi) * Math.sin(theta);\r\n    sun.z = Math.sin(phi) * Math.cos(theta);\r\n\r\n    uniforms[\"sunPosition\"].value.copy(sun);\r\n\r\n    //renderer.toneMappingExposure = effectController.exposure;\r\n\r\n  }\r\n}\r\n","// Keeps the state of keys/buttons\r\n//\r\n// You can check\r\n//\r\n//   inputManager.keys.left.down\r\n//\r\n// to see if the left key is currently held down\r\n// and you can check\r\n//\r\n//   inputManager.keys.left.justPressed\r\n//\r\n// To see if the left key was pressed this frame\r\n//\r\n// Keys are 'left', 'right', 'a', 'b', 'up', 'down'\r\nexport default class InputManager {\r\n  constructor() {\r\n    this.keys = {};\r\n    const keyMap = new Map();\r\n\r\n    const setKey = (keyName, pressed) => {\r\n      const keyState = this.keys[keyName];\r\n      keyState.justPressed = pressed && !keyState.down;\r\n      keyState.down = pressed;\r\n    };\r\n\r\n    const addKey = (keyCode, name) => {\r\n      this.keys[name] = { down: false, justPressed: false };\r\n      keyMap.set(keyCode, name);\r\n    };\r\n\r\n    const setKeyFromKeyCode = (keyCode, pressed) => {\r\n      const keyName = keyMap.get(keyCode);\r\n      if (!keyName) {\r\n        return;\r\n      }\r\n      setKey(keyName, pressed);\r\n    };\r\n\r\n    addKey(65, 'left');\r\n    addKey(68, 'right');\r\n    addKey(87, 'up');\r\n    addKey(83, 'down');\r\n    addKey(69, 'action');\r\n    addKey(32, 'action2');\r\n    addKey(70, 'speak');\r\n\r\n    window.addEventListener('keydown', (e) => {\r\n      setKeyFromKeyCode(e.keyCode, true);\r\n    });\r\n    window.addEventListener('keyup', (e) => {\r\n      setKeyFromKeyCode(e.keyCode, false);\r\n    });\r\n  }\r\n  update() {\r\n    for (const keyState of Object.values(this.keys)) {\r\n      if (keyState.justPressed) {\r\n        keyState.justPressed = false;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\n\r\nimport earcut from 'earcut'\r\nimport {Vector2} from \"three\";\r\n\r\nexport default class RoomGenerator {\r\n\r\n  generate(rooms, doors, walls, textureManager) {\r\n\r\n    const roomMeshes = [];\r\n\r\n    const room_center = this._calcCenter(rooms);\r\n\r\n    for (const room of rooms) {\r\n\r\n      const roomMesh = this._generateShape(\r\n        room.points,\r\n        0.01,\r\n        textureManager.getTexture('floor')\r\n      );\r\n\r\n      roomMesh.userData = {\r\n        roomId: room.type\r\n      }\r\n\r\n      roomMeshes.push(\r\n        roomMesh\r\n      );\r\n\r\n    }\r\n\r\n    for (const door of doors) {\r\n\r\n      const doorMesh = this._generateShape(\r\n        door,\r\n        -2.00,\r\n        textureManager.getTexture('door')\r\n      );\r\n\r\n      roomMeshes.push(\r\n        doorMesh\r\n      );\r\n\r\n    }\r\n\r\n    return roomMeshes;\r\n  }\r\n\r\n  _generateShape(vertices, height, texture) {\r\n\r\n    //console.log(vertices);\r\n\r\n    const vectorArray = [];\r\n\r\n    for (const vertex of vertices) {\r\n      vectorArray.push(\r\n        new THREE.Vector2(\r\n          this._transform(vertex[0]),\r\n          this._transform(vertex[1])\r\n        )\r\n      )\r\n    }\r\n\r\n    const shape = new THREE.Shape(vectorArray);\r\n    const extrudeSettings = {depth: height, bevelEnabled: false};\r\n\r\n    const geometry = new THREE.ExtrudeGeometry(shape, extrudeSettings);\r\n\r\n    const mesh = new THREE.Mesh(geometry, new THREE.MeshLambertMaterial({map: texture, side: THREE.DoubleSide}));\r\n    mesh.receiveShadow = true;\r\n    mesh.rotateX(Math.PI / 2);\r\n\r\n    return mesh;\r\n\r\n  }\r\n\r\n  _calcCenter(rooms) {\r\n\r\n    for (const room of rooms) {\r\n      for (const point of room.points) {\r\n\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  generate2(rooms, walls) {\r\n\r\n\r\n    const planeVertices = this._convertToVertices(rooms);\r\n\r\n    const floorGeometry = new THREE.BufferGeometry();\r\n\r\n    const vertices = new Float32Array(planeVertices);\r\n\r\n    floorGeometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\r\n    const material = new THREE.MeshBasicMaterial({color: 0xff0000, side: THREE.DoubleSide});\r\n    const mesh = new THREE.Mesh(floorGeometry, material);\r\n\r\n    const coeff = 0.01;\r\n\r\n    mesh.scale.set(\r\n      coeff, coeff, coeff\r\n    );\r\n\r\n    const bbox = this._moveToCenter(mesh)\r\n\r\n    const wall_mesh = this._generateWallExtrude(bbox);\r\n\r\n\r\n    return [mesh, wall_mesh];\r\n\r\n  }\r\n\r\n  _generateWallExtrude(bbox) {\r\n\r\n    const wallShapeVector = [];\r\n\r\n    wallShapeVector.push(\r\n      new Vector2(bbox.min.x, bbox.min.z)\r\n    );\r\n    wallShapeVector.push(\r\n      new Vector2(bbox.min.x, bbox.max.z)\r\n    );\r\n    wallShapeVector.push(\r\n      new Vector2(bbox.max.x, bbox.max.z)\r\n    );\r\n    wallShapeVector.push(\r\n      new Vector2(bbox.max.x, bbox.min.z)\r\n    );\r\n\r\n    const wallShape = new THREE.Shape(wallShapeVector);\r\n    const extrudeSettings = {depth: -2.60, bevelEnabled: false};\r\n\r\n    const geometry = new THREE.ExtrudeGeometry(wallShape, extrudeSettings);\r\n\r\n    const wall_mesh = new THREE.Mesh(geometry, new THREE.MeshPhongMaterial({side: THREE.DoubleSide}));\r\n    wall_mesh.rotateX(Math.PI / 2);\r\n\r\n    wall_mesh.translateZ(-2);\r\n\r\n    return wall_mesh;\r\n  }\r\n\r\n  _generateWall() {\r\n\r\n    const wallShape = new THREE.Shape(this._convertToVector(walls));\r\n\r\n    const extrudeSettings = {depth: -260};\r\n\r\n    const geometry = new THREE.ExtrudeGeometry(wallShape, extrudeSettings);\r\n\r\n    const wall_mesh = new THREE.Mesh(geometry, new THREE.MeshPhongMaterial({side: THREE.DoubleSide}));\r\n    wall_mesh.rotateY(Math.PI / 2);\r\n    const coeff = 0.01;\r\n\r\n    wall_mesh.scale.set(\r\n      coeff, coeff, coeff\r\n    );\r\n\r\n    wall_mesh.translateX(-cent.x);\r\n    wall_mesh.translateZ(-cent.z);\r\n\r\n    //this._moveToCenter(mesh);\r\n\r\n\r\n  }\r\n\r\n\r\n  _generatePlane(planeVertices, roomPoints) {\r\n\r\n    let vertices = [];\r\n\r\n    for (const roomPoint of roomPoints) {\r\n      vertices.push(roomPoint[0]);\r\n      vertices.push(roomPoint[1]);\r\n    }\r\n\r\n    //vertices = vertices.reverse();\r\n\r\n    //console.log(vertices);\r\n\r\n    const faces = earcut(vertices);\r\n\r\n    //console.log(faces);\r\n\r\n    for (const face of faces) {\r\n      const idx = face * 2;\r\n      const x = vertices[idx];\r\n      const y = 0;\r\n      const z = vertices[idx + 1];\r\n\r\n      planeVertices.push(\r\n        -z\r\n      );\r\n      planeVertices.push(\r\n        y\r\n      );\r\n      planeVertices.push(\r\n        x\r\n      );\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  _convertToVertices(rooms) {\r\n    const planeVertices = [];\r\n    for (const room of rooms) {\r\n\r\n      const roomPoints = room.points;\r\n\r\n      this._generatePlane(\r\n        planeVertices, roomPoints\r\n      );\r\n\r\n    }\r\n    return planeVertices;\r\n  }\r\n\r\n  _convertToVector(walls) {\r\n    const vectorArray = [];\r\n\r\n    let idx = 5;\r\n\r\n    for (const wall of walls) {\r\n      vectorArray.push(\r\n        new THREE.Vector2(wall[0], wall[1])\r\n      );\r\n\r\n      if (idx++ > 8) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    console.log(vectorArray);\r\n\r\n    return vectorArray;\r\n  }\r\n\r\n  _moveToCenter(mesh) {\r\n    const bbox = new THREE.Box3().setFromObject(mesh);\r\n    const cent = bbox.getCenter(new THREE.Vector3());\r\n    const size = bbox.getSize(new THREE.Vector3());\r\n\r\n    console.log(bbox);\r\n    console.log(cent);\r\n\r\n    mesh.translateX(-cent.x);\r\n    mesh.translateZ(-cent.z);\r\n    return new THREE.Box3().setFromObject(mesh);\r\n\r\n  }\r\n\r\n  _transform(coord) {\r\n    return coord / 100;\r\n  }\r\n}\r\n","import * as THREE from \"three\";\r\n\r\nexport default class TextureManager {\r\n\r\n\r\n  constructor() {\r\n\r\n    this.textures = {};\r\n\r\n    this._loadTextures(this.textures);\r\n  }\r\n\r\n  _loadTextures(textures) {\r\n    const loader = new THREE.TextureLoader();\r\n    const texture = loader.load( \"assets/textures/floor_tiles_06_diff_1k.png\" );\r\n\r\n    // it's necessary to apply these settings in order to correctly display the texture on a shape geometry\r\n\r\n    texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\r\n    texture.repeat.set( 2, 2 );\r\n\r\n    textures['floor'] = texture;\r\n\r\n    const texture2 = loader.load( \"assets/textures/door_texture_3d_model_c4d_max_obj_fbx_ma_lwo_3ds_3dm_stl_963788_o.jpg\" );\r\n\r\n    // it's necessary to apply these settings in order to correctly display the texture on a shape geometry\r\n\r\n    texture2.wrapS = texture2.wrapT = THREE.RepeatWrapping;\r\n    texture2.repeat.set( 1,1 );\r\n\r\n    textures['door'] = texture2;\r\n\r\n\r\n  }\r\n\r\n  getTexture(alias){\r\n    return this.textures[alias];\r\n  }\r\n}\r\n\r\n\r\n","import * as THREE from 'three';\r\n\r\nimport RoomGenerator from \"./RoomGenerator\";\r\n\r\nimport TextureManager from \"../managers/TextureManager\";\r\n\r\nexport default class FlatGenerator {\r\n\r\n\r\n  constructor(config, scene) {\r\n    THREE.Cache.enabled = true;\r\n\r\n    const textureManager = new TextureManager();\r\n\r\n    this._loadJSON(config.url, this._sceneImporter, config, scene, textureManager);\r\n\r\n  }\r\n\r\n  _generateFlat(data, textureManager) {\r\n\r\n    const roomGenerator = new RoomGenerator();\r\n    const roomMesh = roomGenerator.generate(\r\n      data['rooms'],\r\n      data['doors'],\r\n      data['external_walls'],\r\n      textureManager\r\n    );\r\n\r\n    return roomMesh;\r\n\r\n  }\r\n\r\n  _sceneImporter(config, scene, flatObject) {\r\n\r\n    scene.userData.boundingBoxes = [];\r\n\r\n    for (const object of flatObject) {\r\n      object.scale.set(config.size.x, config.size.y, config.size.z);\r\n      object.translateX(config.translate.x);\r\n      object.translateY(config.translate.y);\r\n      object.translateZ(config.translate.z);\r\n\r\n      object.geometry.computeBoundingBox();\r\n      object.updateMatrixWorld();\r\n\r\n      const box1 = object.geometry.boundingBox.clone();\r\n      box1.applyMatrix4(object.matrixWorld);\r\n      box1.userData = object.userData;\r\n\r\n      scene.userData.boundingBoxes.push(box1);\r\n\r\n      scene.add(object);\r\n    }\r\n\r\n\r\n  }\r\n\r\n  _loadJSON(url, sceneImporter, config, scene, texture) {\r\n    const loader = new THREE.FileLoader();\r\n\r\n    const generatorInstance = this;\r\n\r\n    loader.load(\r\n      url,\r\n\r\n      function (data) {\r\n\r\n        const flat = generatorInstance._generateFlat(\r\n          JSON.parse(\r\n            data.replaceAll('\\'', '\\\"')\r\n          ),\r\n          texture\r\n        );\r\n\r\n        sceneImporter(config, scene, flat);\r\n\r\n      },\r\n\r\n      function (xhr) {\r\n        console.log((xhr.loaded / xhr.total * 100) + '% loaded');\r\n      },\r\n\r\n      function (err) {\r\n        console.error('An error happened');\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  _loadTexture(config, scene) {\r\n\r\n    const main_instance = this;\r\n\r\n    const loader = new THREE.TextureLoader();\r\n\r\n// load a resource\r\n    loader.load(\r\n      // resource URL\r\n      'assets/textures/floor_tiles_06_diff_1k.png ',\r\n\r\n      // onLoad callback\r\n      function (texture) {\r\n        // in this example we create the material when the texture is loaded\r\n        main_instance._material = new THREE.MeshBasicMaterial({\r\n          map: texture, side: THREE.DoubleSide\r\n        });\r\n\r\n        main_instance._loadJSON(config.url, main_instance._sceneImporter, config, scene, main_instance._material);\r\n\r\n      },\r\n\r\n      // onProgress callback currently not supported\r\n      undefined,\r\n\r\n      // onError callback\r\n      function (err) {\r\n        console.error('An error happened.');\r\n      }\r\n    );\r\n  }\r\n}\r\n","import * as THREE from \"three\";\r\n\r\nexport default class AvatarManager {\r\n\r\n\r\n  constructor(avatar, forward) {\r\n    this._moveSpeed = 0.05 / 60;\r\n    this._turnSpeed = 4;//this._moveSpeed / 4;\r\n    this._avatar = avatar.scene;\r\n    this._kForward = forward;\r\n\r\n    this._walk = false;\r\n\r\n    this._avatar.castShadow = true;\r\n\r\n    const mixer = new THREE.AnimationMixer(this._avatar);\r\n\r\n    this._mixer = mixer;\r\n\r\n    this._fade_duration = 0.4;\r\n\r\n    this._animations = this._getAnimations(this._mixer, avatar);\r\n\r\n    this._startAnimation('idle', this._fade_duration);\r\n\r\n    this._action = false;\r\n    this._action2 = false;\r\n\r\n    const bb_size = 0.5;\r\n\r\n    const geometry = new THREE.BoxGeometry(0.7, bb_size, 0.5);\r\n    const material = new THREE.MeshBasicMaterial({color: 0x00ff00});\r\n    const cube = new THREE.Mesh(geometry, material);\r\n\r\n    this._boundingBox = cube;\r\n\r\n    this._speakingState = false;\r\n    this._speakingNext = -1;\r\n    this._animationNext = -1;\r\n\r\n    this._phonemeDuration = 0.02;\r\n\r\n  }\r\n\r\n  setSpeechManager(speechManager) {\r\n    this._speechManager = speechManager;\r\n  }\r\n\r\n  update(deltaTime, inputManager, boundingBoxes) {\r\n    let speed = this._moveSpeed\r\n    const avatar = this._avatar;\r\n\r\n    const fade_duration = this._fade_duration;\r\n\r\n    const delta_x = (inputManager.keys.up.down ? 1 : 0) +\r\n      (inputManager.keys.down.down ? -1 : 0);\r\n\r\n    const delta = (inputManager.keys.left.down ? 1 : 0) +\r\n      (inputManager.keys.right.down ? -1 : 0);\r\n\r\n    if (delta !== 0) {\r\n      avatar.rotateY(this._turnSpeed * delta * deltaTime);\r\n    }\r\n\r\n    if (delta_x !== 0) {\r\n\r\n      const distance = delta_x * deltaTime;\r\n\r\n      avatar.translateOnAxis(this._kForward, distance);\r\n      if (!this._walk) {\r\n        this._stopAnimation('idle', fade_duration);\r\n        this._startAnimation('walk', fade_duration);\r\n        this._walk = true;\r\n      }\r\n\r\n      const hit = this._findBoundingBox(avatar, 1.0, boundingBoxes) !== undefined;\r\n\r\n      if (hit) {\r\n        avatar.translateOnAxis(this._kForward, -distance);\r\n      }\r\n    } else {\r\n      if (this._walk) {\r\n        this._stopAnimation('walk', fade_duration);\r\n        this._startAnimation('idle', this._fade_duration);\r\n        this._walk = false;\r\n      }\r\n    }\r\n\r\n    if (this._speakingState) {\r\n      this._speakingAnimation();\r\n    }\r\n\r\n    const speak = inputManager.keys.speak.down;\r\n\r\n    if (speak) {\r\n\r\n      const roomMesh = this._findBoundingBox(avatar, 0.0, boundingBoxes);\r\n      if(roomMesh !== undefined) {\r\n        const roomId = roomMesh.userData.roomId;\r\n        console.log('roomId : ' + roomId);\r\n        this._speakAboutRoom(roomId);\r\n      }\r\n    }\r\n\r\n    const action = inputManager.keys.action.down;\r\n\r\n    if (action) {\r\n      if (this._action !== true) {\r\n        this._stopAnimation('idle', fade_duration);\r\n        this._startAnimation('pointing', fade_duration);\r\n        this._action = true;\r\n      }\r\n    } else {\r\n      if (this._action === true) {\r\n        this._startAnimation('idle', fade_duration);\r\n        this._stopAnimation('pointing', fade_duration);\r\n        this._action = false;\r\n      }\r\n    }\r\n\r\n    const action2 = inputManager.keys.action2.down;\r\n\r\n    if (action2) {\r\n      if (this._action2 !== true) {\r\n        this._stopAnimation('idle', fade_duration);\r\n        this._startAnimation('gesture', fade_duration);\r\n        this._action2 = true;\r\n      }\r\n    } else {\r\n      if (this._action2 === true) {\r\n        this._startAnimation('idle', fade_duration);\r\n        this._stopAnimation('gesture', fade_duration);\r\n        this._action2 = false;\r\n      }\r\n    }\r\n\r\n    this._mixer.update(deltaTime);\r\n\r\n  }\r\n\r\n  _getAnimations(mixer, avatar) {\r\n\r\n    const animations = avatar.animations;\r\n\r\n    const pointingAction = mixer.clipAction(animations[6]);\r\n    const gestureAction = mixer.clipAction(animations[0]);\r\n    const startWalkAction = mixer.clipAction(animations[8]);\r\n    const endWalkAction = mixer.clipAction(animations[4]);\r\n    const walkAction = mixer.clipAction(animations[10]);\r\n    const idleAction = mixer.clipAction(animations[12]);\r\n\r\n    const avatar_animations = [];\r\n    avatar_animations['pointing'] = pointingAction;\r\n    avatar_animations['gesture'] = gestureAction;\r\n    avatar_animations['startWalk'] = startWalkAction;\r\n    avatar_animations['endWalk'] = endWalkAction;\r\n    avatar_animations['walk'] = walkAction;\r\n    avatar_animations['idle'] = idleAction;\r\n\r\n    const jawAction = mixer.clipAction(this._makeJaw());\r\n\r\n    jawAction.setLoop(THREE.LoopPingPong, 2);\r\n\r\n    avatar_animations['jaw'] = jawAction;\r\n\r\n    return avatar_animations;\r\n  }\r\n\r\n  _startAnimation(action, fade_duration) {\r\n    this._animations[action].reset()\r\n      .setEffectiveTimeScale(1)\r\n      .setEffectiveWeight(1)\r\n      .fadeIn(fade_duration)\r\n      .play();\r\n  }\r\n\r\n  _stopAnimation(action, fade_duration) {\r\n    this._animations[action].fadeOut(fade_duration);\r\n  }\r\n\r\n  _makeJaw() {\r\n    var xAxis = new THREE.Vector3(0, 0, 1);\r\n\r\n    var qInitial = new THREE.Quaternion(0, 0, -0.8664570450782776, 0.4992516338825226);//.setFromAxisAngle( xAxis, 0 );\r\n    var qFinal = new THREE.Quaternion().setFromAxisAngle(xAxis, -Math.PI);\r\n    var quaternionKF = new THREE.QuaternionKeyframeTrack('jaw' + '.quaternion', [0, 1, 2], [qInitial.x, qInitial.y, qInitial.z, qInitial.w, qFinal.x, qFinal.y, qFinal.z, qFinal.w, qInitial.x, qInitial.y, qInitial.z, qInitial.w]);\r\n    var clip = new THREE.AnimationClip('Action', 0.5, [quaternionKF]);\r\n\r\n    return clip;\r\n  }\r\n\r\n  _speakAboutRoom(roomId) {\r\n    if (this._speechManager !== undefined) {\r\n      this._speechManager.say(roomId,\r\n        (state) => {\r\n          if (state === 'stop') {\r\n            this._speakingState = false;\r\n            this._stopAnimation('jaw', 0.02);\r\n            this._stopAnimation('gesture', 3);\r\n            this._stopAnimation('pointing', 3);\r\n          }\r\n          if (state === 'speak') {\r\n            this._speakingState = true;\r\n            this._speakingNext = Date.now();\r\n            this._animationNext = Date.now();\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  _speakingAnimation() {\r\n\r\n    if (this._speakingNext < Date.now()) {\r\n      this._startAnimation('jaw', this._phonemeDuration);\r\n      this._speakingNext = Date.now() + (Math.floor(Math.random() * this._phonemeDuration * 30000));\r\n    }\r\n\r\n    if (this._animationNext < Date.now()) {\r\n      const animationDuration = 3;\r\n      const animation = this._randomAnimation(['gesture', 'pointing']);\r\n      this._startAnimation(animation, animationDuration);\r\n      this._animationNext = Date.now() + (Math.floor(Math.random() * animationDuration * 30000));\r\n    }\r\n\r\n  }\r\n\r\n  //TODO: FIX\r\n  _randomAnimation(array) {\r\n    const rnd = Math.random();\r\n    if (rnd < 0.5) {\r\n      return array[0]\r\n    }\r\n    return array[1];\r\n  }\r\n\r\n  _findBoundingBox(avatar, height, boundingBoxes) {\r\n    this._boundingBox.position.x = avatar.position.x;\r\n    this._boundingBox.position.y = height;\r\n    this._boundingBox.position.z = avatar.position.z;\r\n\r\n    this._boundingBox.geometry.computeBoundingBox();\r\n    this._boundingBox.updateMatrixWorld();\r\n\r\n    const box2 = this._boundingBox.geometry.boundingBox.clone();\r\n    box2.applyMatrix4(this._boundingBox.matrixWorld);\r\n\r\n    let hit = false;\r\n\r\n    for (const boundingBox of boundingBoxes) {\r\n      if (boundingBox.intersectsBox(box2)) {\r\n        return boundingBox;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import FlatGenerator from \"../generators/FlatGenerator\";\r\nimport {BVHLoader} from \"three/examples/jsm/loaders/BVHLoader\";\r\nimport * as THREE from \"three\";\r\nimport {GLTFLoader} from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport {VRM} from \"@pixiv/three-vrm\";\r\nimport {FBXLoader} from \"three/examples/jsm/loaders/FBXLoader\";\r\nimport AvatarManager from \"./AvatarManager\";\r\n\r\nexport default class SceneLoaderManager {\r\n\r\n  constructor(scene, sceneElements) {\r\n    this._loaded = false;\r\n    this._scene = scene;\r\n    this._sceneElements = sceneElements;\r\n  }\r\n\r\n  loadScenePromises() {\r\n\r\n    const instance = this;\r\n\r\n    const loadPromiseList = [];\r\n    for (const sceneElement of instance._sceneElements) {\r\n      const loadPromise = new Promise((resolve, reject) => {\r\n        instance._loadSceneElement(\r\n          instance._scene,\r\n          sceneElement,\r\n          resolve,\r\n          reject\r\n        );\r\n      });\r\n      loadPromiseList.push(loadPromise);\r\n    }\r\n    return loadPromiseList;\r\n  }\r\n\r\n  loadScenePromise() {\r\n\r\n    const instance = this;\r\n\r\n    return new Promise((status) => {\r\n\r\n        const loadPromiseList = instance.loadScenePromises();\r\n\r\n        Promise.all(loadPromiseList)\r\n          .then((res) => {\r\n            console.log('success', res);\r\n            let mergedStatus = {result: 'success'};\r\n            for (const re of res) {\r\n              mergedStatus = Object.assign(re, mergedStatus);\r\n            }\r\n            status(mergedStatus);\r\n          })\r\n          .catch((err) => {\r\n            console.log('error', err);\r\n            status({\r\n              result: 'error' + err\r\n            });\r\n          })\r\n      }\r\n    );\r\n  }\r\n\r\n  _loadSceneElement(scene, sceneElement, resolve, reject) {\r\n\r\n    try {\r\n      const scene_url = sceneElement.url.toLowerCase();\r\n\r\n      if (scene_url.endsWith('json')) {\r\n        const flatGenerator = new FlatGenerator(sceneElement, scene);\r\n        resolve({});\r\n      } else if (scene_url.endsWith('gltf') || scene_url.endsWith('glb')) {\r\n        this._loadGLTF(scene, sceneElement, function (status) {\r\n          resolve(status);\r\n        });\r\n      } else if (scene_url.endsWith('fbx')) {\r\n        this._loadFBX(config, scene);\r\n      } else if (scene_url.endsWith('vrm')) {\r\n        this._loadVRM(config, scene);\r\n      } else if (scene_url.endsWith('bvh')) {\r\n        this._loadBVH(config, scene);\r\n      } else {\r\n        console.log('Unknown format! ' + scene_url);\r\n        reject('Unknown format! ' + scene_url);\r\n      }\r\n    } catch (e) {\r\n      reject('Exc! ' + e);\r\n    }\r\n  }\r\n\r\n  _loadGLTF(scene, sceneElement, callback) {\r\n    const loader = new GLTFLoader();\r\n    const processor = this._processScene;\r\n    const searchAnimations = this._searchAnimations;\r\n    const main_instance = this;\r\n\r\n    loader.load(sceneElement.url, function (gltf) {\r\n\r\n      const gltf_scene = processor(gltf.scene);\r\n\r\n      let avatarManager = undefined;\r\n\r\n      if (sceneElement.isAvatar) {\r\n\r\n        const skeleton = new THREE.SkeletonHelper(gltf_scene);\r\n\r\n        // if (config.isDev) {\r\n        //   console.log(skeleton);\r\n        //   skeleton.visible = true;\r\n        //   scene.add(skeleton);\r\n        // }\r\n        //\r\n        const faceVector = new THREE.Vector3(0, 0, 1)\r\n\r\n        avatarManager = new AvatarManager(\r\n          gltf,\r\n          faceVector\r\n        );\r\n\r\n      }\r\n\r\n      const gltfObject = main_instance._fixObject(\r\n        sceneElement.translate,\r\n        main_instance._resizeObject(\r\n          sceneElement.size,\r\n          gltf_scene\r\n        )\r\n      )\r\n\r\n      scene.add(gltfObject);\r\n\r\n      callback({\r\n        avatar: {\r\n          manager: avatarManager\r\n        }\r\n      })\r\n\r\n    }, undefined, function (error) {\r\n\r\n      console.error(error);\r\n\r\n    });\r\n  }\r\n\r\n  _ddd() {\r\n    if (config.animated) {\r\n      const skeleton = new THREE.SkeletonHelper(gltf_scene);\r\n      skeleton.visible = false;\r\n      scene.add(skeleton);\r\n\r\n      console.log(skeleton);\r\n\r\n      const mixer = new THREE.AnimationMixer(gltf.scene);\r\n\r\n      main_instance._mixer = mixer;\r\n\r\n      main_instance.bones = [];\r\n\r\n      const animations = gltf.animations;\r\n\r\n      console.log(animations);\r\n\r\n      const pointingAction = mixer.clipAction(animations[6]);\r\n      const gestureAction = mixer.clipAction(animations[0]);\r\n      const startWalkAction = mixer.clipAction(animations[8]);\r\n      const endWalkAction = mixer.clipAction(animations[4]);\r\n      const walkAction = mixer.clipAction(animations[10]);\r\n      const idleAction = mixer.clipAction(animations[12]);\r\n\r\n      main_instance.durations = [];\r\n      main_instance.durations['pointing'] = animations[6].duration;\r\n      main_instance.durations['gesture'] = animations[0].duration;\r\n      main_instance.durations['walk'] = animations[10].duration;\r\n      main_instance.durations['startWalk'] = animations[8].duration;\r\n      main_instance.durations['endWalk'] = animations[4].duration;\r\n      main_instance.durations['idle'] = animations[12].duration;\r\n\r\n      main_instance.animations = [];\r\n      main_instance.animations['pointing'] = pointingAction;\r\n      main_instance.animations['gesture'] = gestureAction;\r\n      main_instance.animations['startWalk'] = startWalkAction;\r\n      main_instance.animations['endWalk'] = endWalkAction;\r\n      main_instance.animations['walk'] = walkAction;\r\n      main_instance.animations['idle'] = idleAction;\r\n\r\n      //idleAction.setLoop(THREE.LoopPingPong);\r\n\r\n      //pointingAction.play();\r\n\r\n      const animatedCycle = config.animatedCycle;\r\n\r\n      if (animatedCycle !== undefined) {\r\n        main_instance._lastAnimationPhase = Date.now();\r\n        main_instance._animatedCycle = animatedCycle;\r\n        main_instance._animatedCyclePos = 0;\r\n\r\n        main_instance.animations[\r\n          animatedCycle[\r\n            main_instance._animatedCyclePos\r\n            ].animation\r\n          ].play();\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  _loadBVH(config, scene) {\r\n\r\n    const main_instance = this;\r\n\r\n\r\n    const loader = new BVHLoader();\r\n    loader.load(config.scene.url, function (result) {\r\n\r\n      console.log(result);\r\n\r\n      const skeletonHelper = new THREE.SkeletonHelper(result.skeleton.bones[0]);\r\n      skeletonHelper.skeleton = result.skeleton; // allow animation mixer to bind to THREE.SkeletonHelper directly\r\n\r\n      const boneContainer = new THREE.Group();\r\n      boneContainer.add(result.skeleton.bones[0]);\r\n\r\n      scene.add(main_instance._resizeObject(config.scene.size, skeletonHelper));\r\n      scene.add(main_instance._resizeObject(config.scene.size, boneContainer));\r\n\r\n      // play animation\r\n      const mixer = new THREE.AnimationMixer(skeletonHelper);\r\n      mixer.clipAction(result.clip).setEffectiveWeight(1.0).play();\r\n\r\n      main_instance._setMixer(mixer);\r\n\r\n    });\r\n  }\r\n\r\n  _loadVRM(config, scene) {\r\n\r\n    const loader = new GLTFLoader();\r\n    loader.load(\r\n      // URL of the VRM you want to load\r\n      config.scene.url,\r\n\r\n      // called when the resource is loaded\r\n      (gltf) => {\r\n\r\n        // generate a VRM instance from gltf\r\n        VRM.from(gltf).then((vrm) => {\r\n\r\n          console.log(vrm.meta);\r\n\r\n          // add the loaded vrm to the scene\r\n          scene.add(vrm.scene);\r\n\r\n          // deal with vrm features\r\n          console.log(vrm);\r\n\r\n        });\r\n\r\n      },\r\n\r\n      // called while loading is progressing\r\n      (progress) => console.log('Loading model...', 100.0 * (progress.loaded / progress.total), '%'),\r\n\r\n      // called when loading has errors\r\n      (error) => console.error(error)\r\n    );\r\n\r\n  }\r\n\r\n  _fixObject(config_translate, object) {\r\n    object.translateX(config_translate.x);\r\n    object.translateY(config_translate.y);\r\n    object.translateZ(config_translate.z);\r\n    return object;\r\n  }\r\n\r\n  _resizeObject(config_size, object) {\r\n\r\n    const bbox = new THREE.Box3().setFromObject(object);\r\n    const size = bbox.getSize(new THREE.Vector3());\r\n\r\n    //Rescale the object to normalized space\r\n    const maxAxis = Math.max(size.x, size.y, size.z);\r\n    const maxSize = Math.max(config_size.x, config_size.y, config_size.z);\r\n\r\n    object.scale.set(config_size.x, config_size.y, config_size.z);\r\n\r\n    return object;\r\n\r\n  }\r\n\r\n  _loadFBX(config, scene) {\r\n    const loader = new FBXLoader();\r\n\r\n    const main_instance = this;\r\n\r\n    loader.load(config.scene.url, function (object) {\r\n\r\n\r\n      const skeleton = new THREE.SkeletonHelper(object);\r\n      skeleton.visible = true;\r\n      scene.add(skeleton);\r\n\r\n      const mixer = new THREE.AnimationMixer(object);\r\n\r\n      console.log(object.animations);\r\n\r\n      const action = mixer.clipAction(object.animations[0]);\r\n      action.play();\r\n\r\n      object.traverse(function (child) {\r\n\r\n        if (child.isMesh) {\r\n\r\n          child.castShadow = true;\r\n          child.receiveShadow = true;\r\n\r\n        }\r\n\r\n      });\r\n\r\n      scene.add(\r\n        main_instance._resizeObject(\r\n          config.scene.size,\r\n          object\r\n        )\r\n      );\r\n\r\n      main_instance._setMixer(mixer);\r\n\r\n\r\n    });\r\n  }\r\n\r\n  _searchAnimations(model, searchAnimations = this._searchAnimations) {\r\n    if (model === undefined) {\r\n      return;\r\n    }\r\n\r\n    if (model.children === undefined) {\r\n      return;\r\n    }\r\n\r\n    model.children.forEach(element => {\r\n      var clips = element.animations;\r\n      if (clips !== undefined) {\r\n        console.log(clips);\r\n      }\r\n\r\n      searchAnimations(element, searchAnimations);\r\n    });\r\n\r\n  }\r\n\r\n  _processScene(scene) {\r\n    const mroot = scene;\r\n    const bbox = new THREE.Box3().setFromObject(mroot);\r\n    const cent = bbox.getCenter(new THREE.Vector3());\r\n    const size = bbox.getSize(new THREE.Vector3());\r\n\r\n    //Rescale the object to normalized space\r\n    var maxAxis = Math.max(size.x, size.y, size.z);\r\n\r\n    mroot.scale.multiplyScalar(1.8 / maxAxis);\r\n    bbox.setFromObject(mroot);\r\n    bbox.getCenter(cent);\r\n    bbox.getSize(size);\r\n    //Reposition to 0,halfY,0\r\n    mroot.position.copy(cent).multiplyScalar(-1);\r\n    mroot.position.y += (size.y * 0.5);\r\n    return scene;\r\n  }\r\n\r\n}\r\n","import * as THREE from 'three';\r\n\r\nimport Renderer from \"./components/renderer\";\r\nimport Camera from \"./components/camera\";\r\nimport Controls from \"./components/controls\";\r\n\r\nimport SkyBox from \"./components/SkyBox\";\r\n\r\nimport InputManager from \"./managers/InputManager\";\r\n\r\nimport {BoxLineGeometry} from 'three/examples/jsm/geometries/BoxLineGeometry.js';\r\n\r\nimport SceneLoaderManager from \"./managers/SceneLoaderManager\";\r\n\r\nexport default class Main {\r\n\r\n  constructor(container, config = {}, speechManager) {\r\n    this._container = container;\r\n    this._config = Object.assign({\r\n      fog: {\r\n        color: 0x505050,\r\n        near: 0.0008\r\n      },\r\n      camera: {\r\n        fov: 60,\r\n        near: 0.001,\r\n        far: 1000,\r\n        aspect: 1,\r\n        posX: 0,\r\n        posY: 1.8,\r\n        posZ: 10.2\r\n      },\r\n      controls: {\r\n        autoRotate: false,\r\n        autoRotateSpeed: -0.5,\r\n        rotateSpeed: 0.5,\r\n        zoomSpeed: 0.8,\r\n        minDistance: 0.01,\r\n        maxDistance: 600,\r\n        minPolarAngle: Math.PI / 5,\r\n        maxPolarAngle: Math.PI / 2,\r\n        minAzimuthAngle: -Infinity,\r\n        maxAzimuthAngle: Infinity,\r\n        enableDamping: true,\r\n        dampingFactor: 0.5,\r\n        enableZoom: true,\r\n        target: {\r\n          x: 0,\r\n          y: 1.8,\r\n          z: 0\r\n        }\r\n      },\r\n      scene: [],\r\n      isDev: false\r\n    }, config);\r\n\r\n    if (this._config.isDev) {\r\n      console.log(this._config);\r\n    }\r\n\r\n    this._speechManager = speechManager;\r\n\r\n  }\r\n\r\n  start(progressCallback) {\r\n\r\n    const config = this._config;\r\n\r\n    this._scene = this.createScene(config);\r\n\r\n    const scene = this._scene;\r\n\r\n    this._renderer = new Renderer(config, scene, this._container);\r\n    this._camera = new Camera(config, this._renderer.threeRenderer);\r\n\r\n    this._controls = new Controls(config, this._camera.threeCamera, this._container);\r\n\r\n    const light = new THREE.AmbientLight(0x404040, 3); // soft white light\r\n    scene.add(light);\r\n\r\n    if (config.isDev) {\r\n      this._addDeveloper(scene);\r\n    }\r\n\r\n    if (config.sky) {\r\n      const sky = new SkyBox(scene);\r\n    }\r\n\r\n    this._inputManager = new InputManager();\r\n    this._avatarManager = undefined;\r\n\r\n    const sceneLoaderManager = new SceneLoaderManager(scene, config.scene, progressCallback);\r\n\r\n    const loadPromiseList = sceneLoaderManager.loadScenePromises();\r\n\r\n    const loadCount = loadPromiseList.length;\r\n\r\n    progressCallback(0, 'Start loading');\r\n\r\n    Promise.all(loadPromiseList)\r\n      .then((res) => {\r\n        console.log('success', res);\r\n        let idx = 0;\r\n        for (const re of res) {\r\n          if (re.avatar !== undefined) {\r\n            this._avatarManager = re.avatar.manager;\r\n            this._avatarManager.setSpeechManager(this._speechManager);\r\n          }\r\n          idx++;\r\n          progressCallback(Math.floor(idx / loadCount), '');\r\n        }\r\n        progressCallback(100, 'load done.');\r\n      })\r\n      .catch((err) => {\r\n        console.log('error', err);\r\n        progressCallback(-1, 'Error.');\r\n      })\r\n\r\n  }\r\n\r\n  run() {\r\n    this.render();\r\n  }\r\n\r\n  createScene(config) {\r\n    const scene = new THREE.Scene();\r\n\r\n    if (window.devicePixelRatio) {\r\n      config.dpr = window.devicePixelRatio;\r\n    }\r\n\r\n    scene.fog = new THREE.FogExp2(config.fog.color, config.fog.near);\r\n\r\n    return scene;\r\n  }\r\n\r\n  render() {\r\n\r\n    // Call render function and pass in created scene and camera\r\n    this._renderer.render(this._scene, this._camera.threeCamera);\r\n\r\n    this._controls.threeControls.update();\r\n\r\n    const dt = (Date.now() - this._lastframe) / 1000;\r\n\r\n    if (this._mixer !== undefined) {\r\n      this._mixer.update(dt);\r\n    }\r\n\r\n    this._lastframe = Date.now();\r\n\r\n    this._inputManager.update();\r\n\r\n    if (this._avatarManager !== undefined) {\r\n      this._avatarManager.update(dt, this._inputManager, this._scene.userData.boundingBoxes);\r\n    }\r\n\r\n    // RAF\r\n    requestAnimationFrame(this.render.bind(this)); // Bind the main class instead of window object\r\n  }\r\n\r\n  _animateCycle(){\r\n    if (this._animatedCycle !== undefined) {\r\n\r\n      const currentPhase = this._animatedCycle[this._animatedCyclePos];\r\n\r\n      let phaseDuration = currentPhase.time;\r\n\r\n      if (phaseDuration === undefined) {\r\n        phaseDuration = this._getDuration();\r\n      }\r\n\r\n      const delta_time = phaseDuration * 1000;\r\n\r\n      const curr_msecs = Date.now();\r\n\r\n      if (currentPhase.speed !== undefined) {\r\n        const distance = dt * currentPhase.speed;\r\n        this._action_figure.translateZ(distance);\r\n      }\r\n\r\n      if (curr_msecs - this._lastAnimationPhase > delta_time) {\r\n\r\n        const fade_duration = 0.4;\r\n\r\n        //this._getAnimation().stop();\r\n        this._getAnimation().fadeOut(fade_duration);\r\n\r\n\r\n        this._animatedCyclePos = this._animatedCyclePos + 1;\r\n\r\n        if (this._animatedCyclePos > this._animatedCycle.length - 1) {\r\n          this._animatedCyclePos = 0;\r\n        }\r\n\r\n        this._lastAnimationPhase = curr_msecs;\r\n        this._getAnimation()\r\n          .reset()\r\n          .setEffectiveTimeScale(1)\r\n          .setEffectiveWeight(1)\r\n          .fadeIn(fade_duration)\r\n          .play();\r\n        console.log(this._animatedCyclePos);\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  _setMixer(mixer) {\r\n    this._mixer = mixer;\r\n  }\r\n\r\n  _getAnimation() {\r\n    return this.animations[\r\n      this._getAnimationName()\r\n      ]\r\n  }\r\n\r\n  _getDuration() {\r\n    return this.durations[\r\n      this._getAnimationName()\r\n      ]\r\n  }\r\n\r\n  _getAnimationName() {\r\n    return this._animatedCycle[\r\n      this._animatedCyclePos\r\n      ].animation\r\n  }\r\n\r\n  _addDeveloper(scene) {\r\n    const room = new THREE.LineSegments(\r\n      new BoxLineGeometry(6, 6, 6, 10, 10, 10),\r\n      new THREE.LineBasicMaterial({color: 0x800000})\r\n    );\r\n    room.geometry.translate(0, 3, 0);\r\n    scene.add(room);\r\n  }\r\n}\r\n","import Detector from \"./utils/detector.js\";\r\nimport PreloadScene from './utils/preloadScene.js';\r\nimport SpeechManager from './sound/SpeechManager.js'\r\nimport Main from './main/Main.js'\r\n\r\n\r\n// Styles\r\nimport './../css/app.scss';\r\n\r\nconsole.log('Start sequor.edu');\r\n\r\nconst detector = new Detector();\r\n\r\nconst preloadScene = new PreloadScene(document);\r\n\r\nconst speechManager = new SpeechManager(document);\r\n\r\nif (detector.webgl()) {\r\n\r\n  preloadScene.showLoading();\r\n\r\n  const container = document.getElementById('appContainer');\r\n\r\n  let configPromise = fetch('./assets/config.json');\r\n\r\n  configPromise.then(\r\n    response => response.json()\r\n  )\r\n    .then((json) => {\r\n      console.log(json);\r\n\r\n      const main = new Main(\r\n        container,\r\n        {\r\n          sky: false,\r\n          scene: json\r\n        },\r\n        speechManager\r\n      );\r\n\r\n      //TODO: finish promise + progress callback\r\n      main.start((progress, text) => {\r\n          preloadScene.progress(progress, text);\r\n          if (progress > 99) {\r\n            preloadScene.hideLoading();\r\n            main.run();\r\n          }\r\n        }\r\n      );\r\n    });\r\n\r\n\r\n} else {\r\n\r\n  preloadScene.hideLoading();\r\n\r\n  detector.addGetWebGLMessage(\r\n    {\r\n      parent: document.getElementById('appContainer'),\r\n      id: 'webgl-error'\r\n    }\r\n  );\r\n\r\n}\r\n"],"sourceRoot":""}